mean(iris$Sepal.Length)
median(iris$Sepal.Length)
min(iris$Sepal.Length)
max(iris$Sepal.Length)
range(iris$Sepal.Length)
quantile(iris$Sepal.Length)
quantile(iris$Sepal.Length, probs = 0.25)
quantile(iris$Sepal.Length, probs = 0.5)
quantile(iris$Sepal.Length, probs = 0.75)
quantile(iris$Sepal.Length, probs = 0.80)
var(iris$Sepal.Length)
sd(iris$Sepal.Length)
library(psych)
kurtosi(iris$Sepal.Length)
skew(iris$Sepal.Length)
library(descr)
freq_test <- freq(iris$Sepal.Length, plot = F)
freq_test
library(readxl)
exdata1 <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample1.xlsx")
freq(exdat1$SEX, plot = T, main = '성별(barplot)')
dist_sex <- table(exdata1$SEX)
dist_sex
barplot(dist_sex)
barplot(dist_sex, ylim = c(0, 14), main = "BARPLOT", xlab = "SEX", ylab = "FREQUENCY", names = c("Female", "Male"))
barplot(dist_sex, ylim = c(0, 14), main = "BARPLOT", xlab = "SEX", ylab = "FREQUENCY", names = c("Female", "Male"), col = c("pink", "navy"))
boxplot(exdata1$Y21_CNT, exdata1$Y20_CNT)
boxplot(exdata1$Y21_CNT, exdata1$Y20_CNT, ylim = c(0, 60), main="boxplot", names = c("21년건수","20년건수"), col =  c("green", "yellow"))
hist(exdata1$AGE, xlim = c(0,60), ylim = c(0,7), main = "AGE분포")
iris
mtcar
mtcars
data(mtcars)
x <- table(mtcars$gear)
x
pie(x)
x = c(1, 2, 3, 4, 7, 8, 8, 5, 9, 6, 9)
x
stem(x)
library(psych)
data(iris)
pairs.panels(iris)
library(descr)
library(dplyr)
library(psych)
library(readxl)
library(reshape2)
library(XML)
library(jsonlite)
library(plyr)
exdata1 <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample1.xlsx")
freq(exdat1$SEX, plot = T, main = '성별(barplot)')
dist_sex <- table(exdata1$SEX)
dist_sex
barplot(dist_sex)
barplot(dist_sex, ylim = c(0, 14), main = "BARPLOT", xlab = "SEX", ylab = "FREQUENCY", names = c("Female", "Male"))
barplot(dist_sex, ylim = c(0, 14), main = "BARPLOT", xlab = "SEX", ylab = "FREQUENCY", names = c("Female", "Male"), col = c("pink", "navy"))
boxplot(exdata1$Y21_CNT, exdata1$Y20_CNT)
boxplot(exdata1$Y21_CNT, exdata1$Y20_CNT, ylim = c(0, 60), main="boxplot", names = c("21년건수","20년건수"), col =  c("green", "yellow"))
hist(exdata1$AGE, xlim = c(0,60), ylim = c(0,7), main = "AGE분포")
iris
mtcar
exdata1 %>% select(ID)
exdata1 %>% select(ID, AREA, Y21_CNT)
exdata1 %>% select(-AREA)
exdata1 %>% select(-AREA, -Y21_CNT)
exdata1 %>% filter(AREA == '서울')
exdata1 %>% filter(AREA == '서울' & Y21_CNT >= 10)
exdata1 %>% arrange(AGE)
exdata1 %>% arrange(desc(Y21_AMT))
exdata1 %>% arrange(AGE, desc(Y21_AMT))
exdata1 %>% summarise(TOT_Y21_AMT = sum(Y21_AMT))
exdata1 %>% group_by(AREA) %>% summarise(SUM_Y21_AMT = sum(Y21_AMT))
m_history <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample2_m_history.xlsx")
f_history <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample3_f_history.xlsx")
View(m_history)
View(f_history)
exdata_bindjoin <- bind_rows(m_history, f_history)
View(exdata_bindjoin)
jeju_y21_history <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample4_y21_history.xlsx")
jeju_y20_history <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample5_y20_history.xlsx")
View(jeju_y21_history)
View(jeju_y20_history)
bind_col <- left_join(jeju_y21_history, jeju_y20_history, by="ID")
View(bind_col)
bind_col_inner <- inner_join(jeju_y21_history, jeju_y20_history, by="ID")
View(bind_col_inner)
bind_col_full <- full_join(jeju_y21_history, jeju_y20_history, by="ID")
View(bind_col_full)
head(airquality)
names(airquality) <- tolower(names(airquality))
head(airquality)
melt_test <- melt(airquality)
head(melt_test)
freq(exdata1$SEX, plot = T, main = '성별(barplot)')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
tail(melt_test)
melt_test2 <- melt(airquality, id.vars = c("month", "wind"), measure.vars = "ozone")
head(melt_test2)
melt_test2 <- melt(airquality, id.vars = c("month", "wind"), measure.vars = "ozone")
head(melt_test2)
library(reshape2)
melt_test2 <- melt(airquality, id.vars = c("month", "wind"), measure.vars = "ozone")
head(melt_test2)
names(airquality)
totlower(names(airquality))
tolower(names(airquality))
head(airquality)
aq_melt <- melt(airquality, id.vars = c("month", "day"), na.rm = TRUE)
head(aq_melt)
aq_melt <- dcast(aq_melt, month + day ~ variable)
head(aq_dcast)
aq_dcast <- dcast(aq_melt, month + day ~ variable)
head(aq_dcast)
aq_melt <- melt(airquality, id.vars = c("month", "day"), na.rm = TRUE)
head(aq_melt)
aq_dcast <- dcast(aq_melt, month + day ~ variable)
head(aq_dcast)
View(airquality)
View(aq_melt)
View(aq_dcast)
acast(aq_melt, day ~ month ~ variable)
acast(aq_melt, month ~ variable, mean)
dcast(aq_melt, month ~ variable, sum)
x <- c(1, 2, NA, 4, 5)
x
sum(x)
is.na(x)
table(is.na(x))
x <- c(1, 2, NA, 4, 5)
x
sum(x)
is.na(x)
sum(x, na.rm = T)
table(is.na(x))
data(airquality)
airquality
is.na(airquality)
table(is.na(airquality))
sum(is.na(airquality))
colSums(is.na(airquality))
data(airquality)
na.omit(airquality)
data(airquality)
airquality
airquality[is.na(airquality)] <-0
colsum(is.na(airquality))
colSums(is.na(airquality))
data(mtcars)
mtcars
boxplot(mtcars$wt)
boxplot(mtcars$wt)$stats
mtcars$wt <- ifelse(mtcars$wt > 5.25, NA, mtcars$wt)
mtcars$wt
mtcars$wt <- ifelse(mtcars$wt > 5.25, NA, mtcars$wt)
install.packages("ggplot2")
library(ggplot2)
str(airquality)
ggplot(airquality, aes(x=Day, y=Temp))
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point(size=3, color="red")
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point(size=3, color="red")
str(airquality)
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point(size=3, color="red")
library(ggplot2)
str(airquality)
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point(size=3, color="red")
ggplot(airquality, aes(x=Day, y = Temp)) + geom_line()
ggplot(mtcars, aes(x=cyl)) + geom_bar(width = 0.5)
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(fill = factor(gear))
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(fill = factor(gear))
mtcars
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(aes(fill = factor(gear)))
ggplot(airquality, aes(x=Day, y=Temp))
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(aes(fill = factor(gear)))
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(aes(fill = factor(gear))) + coord_polar()
ggplot(mtcars, aes(x = factor(cyl))) + geom_bar(aes(fill = factor(gear))) + coord_polar(theta = "y")
ggplot(airquality, aes(x = Day, y = Temp, group = Day)) + geom_boxplot()
ggplot(airquality, aes(Temp)) + geom_histogram()
ggplot(airquality, aes(x = Day, y =Temp)) + geom_line() + geom_point()
ggplot(airquality, aes(x = Day, y = Temp)) + geom_line(color = "red") + geom_point(size = 3)
View(exdata1)
str(economics)
ggplot(economics, aes(x = date, y = psavert)) + geom_line() + geom_abline(intercept = 12.18671, slope = -0.0005444)
ggplot(economics, aes(x = date, y = psavert)) + geom_line() + geom_hline(yintercept = mean(economics$psavert))
library(dplyr)
x_inter <- filter(economics, psavert == min(economics$psavert))$date
ggplot(economics, aes(x = date, y = psavert)) + geom_line() + geom_vline(xintercept =  x_inter)
ggplot(airquality, aes(x = Day, y = Temp)) + geom_point() + geom_text(ase(label = Temp, vjust = 0, hjust = 0))
ggplot(airquality, aes(x = Day, y = Temp)) + geom_point() + geom_text(aes(label = Temp, vjust = 0, hjust = 0))
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin=3, xmax = 4, ymin - 12, ymax - 21, alpha = 0.5, fill = "skyblue")
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin=3, xmax = 4, ymin = 12, ymax - 21, alpha = 0.5, fill = "skyblue")
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue")
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") + annotate(("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow()))
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") + annotate(("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow())
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") + annotate("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow())
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") + annotate("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow()) + annotate("text", x = 2.5, y = 10, label = "point")
ggplot(mtcars, aes(x = gear)) + geom_bar() + labs(x = "기어수", y = "자동차수",  title = "변속기 기어별 자동차수수")
cor.test(exdata1Y20_CNT, exdata1$Y21_CNT)
cor.test(exdata1$Y20_CNT, exdata1$Y21_CNT)
reg_result <- lm(Y21_CNT ~ Y20_CNT, data = exdata1)
reg_result
ggplot(airquality, aes(x = Day, y = Temp)) + geom_point() + geom_text(aes(label = Temp, vjust = 0, hjust = 0))
ggplot(airquality, aes(x = Day, y = Temp)) + geom_point() + geom_text(aes(label = Temp, vjust = 0, hjust = 0))
ggplot(airquality, aes(x = Day, y = Temp)) + geom_point() + geom_text(aes(label = Temp, vjust = 0, hjust = 0))
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue")
rect
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + annotate("rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") + annotate("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow()) + annotate("text", x = 2.5, y = 10, label = "point")
install.packages("ggmap")
library(ggmap)
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
get_googlemap(center, maptype = "지도 유형")
get_googlemap(center, maptype = "지도 유형")
ggmap()
geocode()
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
get_googlemap(center, maptype = "지도 유형")
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
get_googlemap(center, maptype = "지도 유형")
install.packages("ggmap")
install.packages("ggmap")
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
library(ggmap)
library(ggplot2)
register_google(key = "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE")
get_googlemap(center, maptype = "지도 유형")
ggmap(gg_seoul)
gg_seoul <- get_googlemap("seoul", maptype = "roadmap")
ggmap(gg_seoul)
library(dplyr)
geo_code <- enc2utf8("대전역") %>%
geocode()
geo_code <- enc2utf8("대전역") %>%
geocode()
geo_code <- enc2utf8("대전역") %>%
geocode()
geo_data <- as.numeric(geo_code)
get_googlemap(center = geo_data, maptype = "roadmap", zoom 13) %>%
get_googlemap(center = geo_data, maptype = "roadmap", zoom = 13) %>%
get_googlemap(center = geo_data, maptype = "roadmap", zoom = 13) %>% ggmap() + geom_point(data = geo_code, aes(x = geo_code$lon, y = geo_code$lat))
geo_code <- enc2utf8("대전역") %>% geocode()
geo_data <- as.numeric(geo_code)
get_googlemap(center = geo_data, maptype = "roadmap", zoom = 13) %>% ggmap() + geom_point(data = geo_code, aes(x = geo_code$lon, y = geo_code$lat))
library(readxl)
library(readxl)
entrance_xls <- rean_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/entrance.xls")
entrance_xls <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/entrance.xls")
str(entrance_xls)
head(entrance_xls)
colnames(entrance_xls) <- c("country", "JAN", "FEB", "MAR", "APR", "JUN", "JUL", "AUG", "SEP",
"OCT", "NOV", "DEC")
entrance_xls$country <- gsub(" ", "", entrance_xls$country)
entrance_xls
entrance_xls |> nrow()
top5_country <- entrance_xls[order(entrance_xls$JAN),] |> head(n = 5)
top5_country
library(reshape2)
top5_melt <- melt(top5_country, id.vars = 'country', variable.name = 'mon')
head(top5_melt)
library(ggplot2)
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country))
head(top5_melt)
top5_country <- entrance_xls[order(entrance_xls$JAN),] |> head(n = 5)
top5_country
entrance_xls <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/entrance.xls")
str(entrance_xls)
head(entrance_xls)
colnames(entrance_xls) <- c("country", "JAN", "FEB", "MAR", "APR", "JUN", "JUL", "AUG", "SEP",
"OCT", "NOV", "DEC")
entrance_xls$country <- gsub(" ", "", entrance_xls$country)
entrance_xls
entrance_xls |> nrow()
top5_country <- entrance_xls[order(entrance_xls$JAN),] |> head(n = 5)
top5_country
library(reshape2)
top5_melt <- melt(top5_country, id.vars = 'country', variable.name = 'mon')
head(top5_melt)
library(ggplot2)
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country))
entrance_xls <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/entrance_exam.xls")
str(entrance_xls)
head(entrance_xls)
colnames(entrance_xls) <- c("country", "JAN", "FEB", "MAR", "APR", "JUN", "JUL", "AUG", "SEP",
"OCT", "NOV", "DEC")
entrance_xls$country <- gsub(" ", "", entrance_xls$country)
entrance_xls
entrance_xls |> nrow()
top5_country <- entrance_xls[order(entrance_xls$JAN),] |> head(n = 5)
top5_country
library(reshape2)
top5_melt <- melt(top5_country, id.vars = 'country', variable.name = 'mon')
head(top5_melt)
library(ggplot2)
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
top5_country <- entrance_xls[order(-entrance_xls$JAN),] |> head(n = 5)
top5_country
library(reshape2)
top5_melt <- melt(top5_country, id.vars = 'country', variable.name = 'mon')
head(top5_melt)
library(ggplot2)
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country))
ggplot(top5_melt, aes(x = mon, y = value, group = country)) + geom_line(aes(color = country)) + ggtitle("2020년 국적별 입국 수 변화 추이") + scale_y_continuous(breaks = seq(0, 500000, 50000))
ggplot(top5_melt, aes(x = mon, y = value, fill = country)) + geom_bar(stat = "identity", position = "dodge")
ggplot(top5_melt, aes(x = mon, y = value, fill = country)) + geom_bar(stat = "identity", position = "stack")
library(readxl)
xlsdata <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/20211125194459.xls")
View(xlsdata)
head(data_raw)
data_raw <- xlsdata[, c(2:5)]
head(data_raw)
names(data_raw)
names(data_raw) <- c("state", "city", "name", "addr")
names(data_raw)
table(data_raw$state)
barplot(table(data_raw$state))
library(dplyr)
data_raw %>% count(city)
daejeon_data <- data_raw[data_raw$state == "대전",]
head(daejeon_data)
nrow(daejeon_data)
library(ggmap)
ggmap_key <- "AIzaSyClyDsfhdF4-XZcaBQOY-mKj1rmp4LM2NE"
daejeon_data <- mutate_geocode(data = daejeon_data, location = addr, source = 'google')
register_google(ggmap_key)
daejeon_data <- mutate_geocode(data = daejeon_data, location = addr, source = 'google')
head(daejeon_data)
head(daejeon_data$lon)
daejeon_map <- get_googlemap('대전', maptype = 'roadmao', zoom = 11)
daejeon_map <- get_googlemap('대전', maptype = 'roadmao', zoom = 11)
daejeon_map <- get_googlemap('대전', maptype = 'roadmap', zoom = 11)
ggmap(daejeon_map) + geom_point(data = daejeon_data, aes(x = lon, y = lat, color = factor(name)), size = 3)
daejeon_data_marker <- data.frame(daejeon_data$lon, daejeon_data$lat)
daejeon_map <- get_googlemap('대전', maptype = 'roadmap', zoom = 11, markers = daejeon_data_marker)
ggmap(daejeon_map) + geom_text(data = daejeon_data, aes(x = lon, y = lat, ), size = 3, label = daejeon_data$naem)
ggmap(daejeon_map) + geom_text(data = daejeon_data, aes(x = lon, y = lat, ), size = 3, label = daejeon_data$name)
library(readxl)
forest_example_data <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/forest_example_data.xls")
forest_example_data <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/forest_example_data.xls") <-c("name", "city", "gubun", "area", "number", "stay", "city_new", "code", "codename")
forest_example_data <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/forest_example_data.xls")
colbanes(forest_example_data)<-c("name", "city", "gubun", "area", "number", "stay", "city_new", "code", "codename")
colnames(forest_example_data)<-c("name", "city", "gubun", "area", "number", "stay", "city_new", "code", "codename")
str(forest_example_data)
head(fore)
head(forest_example_data)
library(descr)
freq(forest_example_data$city, plot = T, main = 'city')
city_table <- table(forest_example_data$city)
city_table
barplot(city_table)
library(dplyr)
count(forest_example_data, city) %>% arrange(desc(n))
library(readxl)
dustdata <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/dustdata.xlsx")
View(dustdata)
str(dustdata)
library(dplyr)
dustdata_anal <- dustdata[, c("날짜", "성북구", "중구")]
View(dustdata_anal)
is.na(dustdata_anal)
sum(is.na(dustdata_anal))
library(psych)
describe(dustdata_anal$성북구)
describe(dustdata_anal$중구구)
describe(dustdata_anal$중구)
boxplot(dustdata_anal$성북구, dustdata_anal$중구, main = "finedust_compare", xlab = "AREA", names = c("성북구", "중구"), ylab = "FINEDUST_PM", col = c("blue", "green"))
var.test(dustdata_anal$중구, dustdata_anal$성북구)
t.test(dustdata_anal$중구, dustdata_anal$성북구, var.equal = T)
exdata1 <- read_excel("~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/Sample1.xlsx")
exdata1
boxplot(formula = Y20_CNT ~ AREA, data = exdata1)
anova(lm(Y20_CNT ~ AREA, data = exdata1))
oneway.test(data = exdata1, Y20_CNT ~ AREA, var.equal = T)
install.packages('tinytex')
library(tinytex)
tinytex::install_tinytex()
View(json_data)
View(list1)
![](~/GitHub/Yonsai_IT_Academy/firstStep/R/data_ex/image.png){width=100px, height=100px}
shiny::runApp('Hong')
install.packages("raster")
install.packages("rgeos")
install.packages("maptools")
install.packages("rgdal")
library(ggmap)
library(ggplot2)
library(raster)
library(rgeos)
library(maptools)
library(rgdal)
p <- read.csv("~/GitHub/Yonsai_IT_Academy/firstStep/R/sample.csv")
map <- shapefile("~/GitHub/Yonsai_IT_Academy/firstStep/R/SIG_201703/TL_SCCO_SIG.shp")
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum = WGS84 + no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
d <- readOGR("SOG_201703")
d <- readOGR("TL_SCCO_SIG")
d <- readOGR("data")
d <- readOGR("data","TL_SCCO_SIG")
p <- read.csv("~/GitHub/Yonsai_IT_Academy/firstStep/R/sample.csv", header = TRUE)
map <- shapefile("~/GitHub/Yonsai_IT_Academy/firstStep/R/SIG_201703/TL_SCCO_SIG.shp")
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
new_map <- foritify(map, region = "SIG_CD")
new_map <- fortify(map, region = "SIG_CD")
View(new_map)
new_map$id <- as.numeric(new_map$id)
seou;_map <- new_map[new_map$id <= 11740,]
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color='black')
p <- read.csv("~/GitHub/Yonsai_IT_Academy/firstStep/R/sample.csv", header = TRUE)
map <- shapefile("~/GitHub/Yonsai_IT_Academy/firstStep/R/SIG_201703/TL_SCCO_SIG.shp")
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
new_map <- fortify(map, region = "SIG_CD")
View(new_map)
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color='black')
p <- read.csv("~/GitHub/Yonsai_IT_Academy/firstStep/R/sample.csv", header = TRUE)
map <- shapefile("~/GitHub/Yonsai_IT_Academy/firstStep/R/SIG_201703/TL_SCCO_SIG.shp")
library(ggmap)
library(ggplot2)
library(raster)
library(rgeos)
library(maptools)
library(rgdal)
p <- read.csv("~/GitHub/Yonsai_IT_Academy/firstStep/R/sample.csv", header = TRUE)
map <- shapefile("~/GitHub/Yonsai_IT_Academy/firstStep/R/SIG_201703/TL_SCCO_SIG.shp")
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
new_map <- fortify(map, region = "SIG_CD")
View(new_map)
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color='black')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'black')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m")
map@proj4string
map <- spTransform(map, CRSobj = CRS('+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80
+units=m +no_defs'))
new_map <- fortify(map, region = "SIG_CD")
View(new_map)
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
new_map <- fortify(map, region = "SIG_CD")
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map <- spTransform(map, CRSobj = CRS('+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80
+units=m +no_defs'))
new_map <- fortify(map, region = "SIG_CD")
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map@proj4string
map <- spTransform(map, CRSobj = CRS('+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=WGS80
+units=m +no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=GRS84 +datum=WGS84 + no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80
+units=m +no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
new_map <- fortify(map, region = "SIG_CD")
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
library(ggmap)
library(ggplot2)
library(raster)
library(rgeos)
library(maptools)
library(rgdal)
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 + no_defs'))
new_map <- fortify(map, region = "SIG_CD")
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]
P_merge <- merge(seoul_map, p, by = 'id')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'yellow', color = 'white')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), file = 'white', color = 'white')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), color = 'white')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), fill = 'white', color = 'black')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), fill = 'black', color = 'white')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), fill = 'white', color = 'black')
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), fill = 'white', color = 'black')
